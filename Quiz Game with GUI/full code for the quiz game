import tkinter as tk
from tkinter import messagebox

class QuizGame:
    def __init__(self, root):
        self.root = root
        self.root.title("Python Quiz Game")
        self.root.geometry("500x400")
        
        # Initialize quiz data
        self.questions = [
            {"question": "What is the capital of France?", "options": ["Berlin", "Madrid", "Paris", "Rome"], "answer": "Paris"},
            {"question": "Who created Python?", "options": ["Guido van Rossum", "Elon Musk", "Mark Zuckerberg", "Bill Gates"], "answer": "Guido van Rossum"},
            {"question": "What is 2 + 2?", "options": ["3", "4", "5", "6"], "answer": "4"},
            {"question": "Which of the following is a Python data type?", "options": ["List", "Array", "Table", "Matrix"], "answer": "List"},
        ]
        
        self.question_index = 0
        self.score = 0
        
        # Set up GUI components
        self.score_label = tk.Label(root, text="Score: 0", font=("Arial", 14))
        self.score_label.pack(pady=10)

        self.question_label = tk.Label(root, text=self.questions[self.question_index]["question"], font=("Arial", 16), width=40, height=2)
        self.question_label.pack(pady=20)

        self.option_buttons = []
        for i in range(4):
            button = tk.Button(root, text="", width=20, height=2, command=lambda i=i: self.check_answer(i))
            button.pack(pady=5)
            self.option_buttons.append(button)
        
        self.next_question()
    
    def next_question(self):
        # Get the current question
        question_data = self.questions[self.question_index]
        self.question_label.config(text=question_data["question"])
        
        # Update the options
        for i, option in enumerate(question_data["options"]):
            self.option_buttons[i].config(text=option)
    
    def check_answer(self, option_index):
        # Check if the selected answer is correct
        correct_answer = self.questions[self.question_index]["answer"]
        selected_answer = self.option_buttons[option_index].cget("text")
        
        if selected_answer == correct_answer:
            self.score += 1
            messagebox.showinfo("Correct!", "That's the right answer!")
        else:
            messagebox.showinfo("Incorrect!", f"Wrong! The correct answer is: {correct_answer}")
        
        # Update the score label
        self.score_label.config(text=f"Score: {self.score}")
        
        # Move to the next question
        self.question_index += 1
        
        # If there are more questions, display the next one
        if self.question_index < len(self.questions):
            self.next_question()
        else:
            self.show_final_score()
    
    def show_final_score(self):
        # Show final score at the end of the quiz
        messagebox.showinfo("Quiz Over", f"Your final score is {self.score} out of {len(self.questions)}!")
        self.root.quit()  # Close the game window

# Create the main window
root = tk.Tk()
quiz_game = QuizGame(root)
root.mainloop()
